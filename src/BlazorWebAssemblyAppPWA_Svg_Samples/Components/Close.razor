<svg width="@sizeDelta.X" height="@sizeDelta.Y" x="@anchorPosition.X" y="@anchorPosition.Y" viewBox="0 0 24 24" fill="gold">
	<path d="M15 9.00004L9 15M15 15L9 9.00004M12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21Z" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
</svg>

@implements IDisposable
@inject IWindowSize WindowSizeSingleton

@code {

	protected override void OnInitialized()
	{
		base.OnInitialized();
		WindowSizeSingleton.PropertyChanged += OnWindowSizeSingleton; // TODO: can we move this into the Layout page? Window resize and orientaion change
	}

	protected override void OnAfterRender(bool firstRender)
	{
		base.OnAfterRender(firstRender);
		Update();
	}

	private async void OnWindowSizeSingleton(object? sender, EventArgs e)
	{
		Update();
		await InvokeAsync(StateHasChanged);
	}

	public void Dispose()
	{
		WindowSizeSingleton.PropertyChanged -= OnWindowSizeSingleton;
	}

	//transform="matrix(6.25,0,0,6.25,600,0)"

	// protected override Task OnAfterRenderAsync(bool firstRender)
	// {
	// 	X = Dx;
	// 	Y = Dy;

	// 	return base.OnAfterRenderAsync(firstRender);
	// }

	// [Parameter]
	// public double Width { get; set; } = 100;

	// [Parameter]
	// public double Height { get; set; } = 100;

	// [Parameter]
	// public double X { get; set; } = 0;

	// [Parameter]
	// public double Y { get; set; } = 0;

	[Parameter]
	public float Dx { get; set; } = 0;

	[Parameter]
	public float Dy { get; set; } = 0;

	[Parameter]
	public float DWidth { get; set; } = 0;

	[Parameter]
	public float DHeight { get; set; } = 0;

	private Vector2 sizeDelta;
	private Vector2 anchorPosition;

	public void Update()
	{
		float screenWidth = (float)WindowSizeSingleton.Width;
		float screenHeight = (float)WindowSizeSingleton.Height;
		float itemWidth = DWidth;
		float itemHeight = DHeight;
		bool preserveAspect = false;

		float offsetX = Dx;
		float offsetY = Dy;

		sizeDelta = new Vector2(screenWidth * itemWidth / 100, ((preserveAspect) ? screenWidth * itemWidth : screenHeight * itemHeight) / 100);
		anchorPosition = new Vector2(screenWidth * offsetX / 100, screenHeight * offsetY / 100);

	}
}
