@page "/keyboardpage"

<div tabindex="0" @ref="myDiv"
    @onkeydown="@KeyDown" style="background-color: orange">
    <p>Test code:</p>
    <p>@Key</p>
    <p>@Code</p>
</div>

@code 
{
    private string Key;
    private string Code;
    protected ElementReference myDiv; 

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) 
        {
            await myDiv.FocusAsync();
        }  
    }

    protected void KeyDown(KeyboardEventArgs e)
    {
        Code = e.Code;
        Key = e.Key;

        var sb = new StringBuilder();
        sb.AppendLine(nameof(KeyDown));
        sb.AppendLine($"{nameof(e.Key)} - {e.Key}");
        sb.AppendLine($"{nameof(e.Code)} - {e.Code}");
        sb.AppendLine($"{nameof(e.Location)} - {e.Location}");
        sb.AppendLine($"{nameof(e.Repeat)} - {e.Repeat}");
        sb.AppendLine($"{nameof(e.CtrlKey)} - {e.CtrlKey}");
        sb.AppendLine($"{nameof(e.ShiftKey)} - {e.ShiftKey}");
        sb.AppendLine($"{nameof(e.AltKey)} - {e.AltKey}");
        sb.AppendLine($"{nameof(e.MetaKey)} - {e.MetaKey}");
        sb.AppendLine($"{nameof(e.Type)} - {e.Type}");

        Console.WriteLine(sb.ToString());
    }
}
